{
  "openapi": "3.0.0",
  "info": {
    "title": "trading-platform-api",
    "version": "1.0",
    "description": "This API describes the end points of the trading platform api."
  },
  "servers": [
    {
      "url": "http://0.0.0.0:3000",
      "description": "Local url port may vary depending on binding"
    }
  ],
  "paths": {
    "/v1/deals": {
      "post": {
        "summary": "Creates a new deal",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the deal"
                  },
                  "currency": {
                    "type": "string",
                    "description": "Currency of the deal"
                  },
                  "status": {
                    "type": "string",
                    "enum": ["available", "sold"],
                    "description": "The status of the deal"
                  },
                  "discount": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["flat", "percentage"],
                        "description": "The type of discount"
                      },
                      "amount": {
                        "type": "integer",
                        "description": "The amount of discount to be given"
                      }
                    }
                  },
                  "deal_items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "name of the deal item"
                        },
                        "price": {
                          "type": "integer",
                          "description": "Price of deal item"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the deal"
                        },
                        "currency": {
                          "type": "string",
                          "description": "Currency of the deal"
                        },
                        "status": {
                          "type": "string",
                          "enum": ["available", "sold"],
                          "description": "The status of the deal"
                        },
                        "total_price": {
                          "type": "integer",
                          "description": "The total price of the deal"
                        },
                        "discount": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": ["flat", "percentage"],
                              "description": "The type of discount"
                            },
                            "amount": {
                              "type": "integer",
                              "description": "The amount of discount to be given"
                            }
                          }
                        },
                        "deal_items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "name of the deal item"
                              },
                              "price": {
                                "type": "integer",
                                "description": "Price of deal item"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "get": {
        "summary": "Gets deals",
        "description": "Will get all of the deals from sellers where that user is allowed to see, response will be paginated",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The requested page number."
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "per_page",
            "in": "query",
            "required": false,
            "description": "The requested per_page amount of records."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the deal"
                          },
                          "currency": {
                            "type": "string",
                            "description": "Currency of the deal"
                          },
                          "status": {
                            "type": "string",
                            "enum": ["available", "sold"],
                            "description": "The status of the deal"
                          },
                          "total_price": {
                            "type": "integer",
                            "description": "The total price of the deal"
                          },
                          "discount": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": ["flat", "percentage"],
                                "description": "The type of discount"
                              },
                              "amount": {
                                "type": "integer",
                                "description": "The amount of discount to be given"
                              }
                            }
                          },
                          "deal_items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "name of the deal item"
                                },
                                "price": {
                                  "type": "integer",
                                  "description": "Price of deal item"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "meta" : {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "integer",
                          "description": "The returned page number"
                        },
                        "per_page": {
                          "type": "integer",
                          "description": "The returned per page amount"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/v1/deals/{id}": {
      "patch": {
        "summary": "Updates a deal",
        "description": "Update properties are limited to; name, currency, status",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The id of the deal to update"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the deal"
                  },
                  "currency":{
                    "type": "string",
                    "description": "Currency of the deal"
                  },
                  "status": {
                    "type": "string",
                    "enum": ["available", "sold"],
                    "description": "The status of the deal"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the deal"
                        },
                        "currency": {
                          "type": "string",
                          "description": "Currency of the deal"
                        },
                        "status": {
                          "type": "string",
                          "enum": ["available", "sold"],
                          "description": "The status of the deal"
                        },
                        "total_price": {
                          "type": "integer",
                          "description": "The total price of the deal"
                        },
                        "discount": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": ["flat", "percentage"],
                              "description": "The type of discount"
                            },
                            "amount": {
                              "type": "integer",
                              "description": "The amount of discount to be given"
                            }
                          }
                        },
                        "deal_items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "name of the deal item"
                              },
                              "price": {
                                "type": "integer",
                                "description": "Price of deal item"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/v1/webhooks": {
      "post": {
        "summary": "Creates a webhook",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the webhook"
                  },
                  "webhook_url": {
                    "type": "string",
                    "description": "The url of the webhook"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "secret": {
                          "type": "string",
                          "description": "The client_secret used to sign the webhook requests"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Error"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Deletes a webhook",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The id of the webhook to remove"
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/v1/oauth/token": {
      "post": {
        "summary": "Creates a auth token by using user details",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "username":{
                    "type": "string",
                    "description": "The users email address"
                  },
                  "password": {
                    "type": "string",
                    "description": "The users password"
                  },
                  "grant_type": {
                    "type": "string",
                    "enum": ["password"],
                    "description": "The grant type to get a oauth token with"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "token": {
                          "type": "string",
                          "description": "The bearer token which will be used for request authentication"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/v1/users": {
      "post": {
        "summary": "Creates a new user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name":{
                    "type": "string",
                    "description": "The users name"
                  },
                  "email":{
                    "type": "string",
                    "description": "The users email address"
                  },
                  "password": {
                    "type": "string",
                    "description": "The users password"
                  },
                  "user_type": {
                    "type": "array",
                    "description": "The users registered types",
                    "items": {
                      "type": "string",
                      "enum": ["seller", "buyer"],
                      "description": "The users type"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Server Error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
